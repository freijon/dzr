name: push

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest] # , windows-latest = The operation was canceled
    env:
      OS: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v1
    - name: setup (win)
      if: startsWith(matrix.os, 'windows')
      run: |
        choco install llvm
        choco install openssl.light
    - name: build
      if: startsWith(matrix.os, 'mac')
      run: |
        cc dzr.c -Os -s -DUSE_SSL -L/usr/local/opt/openssl/lib -I/usr/local/opt/openssl/include -lssl -lcrypto -o dzr
        brew install musl* upx*
        musl-gcc -Os -s -static dzr.c -o dzr_static
    - name: build
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        cc dzr.c -Os -s -DUSE_SSL -lssl -lcrypto -o dzr
        sudo apt install musl*
        musl-gcc -Os -s -static dzr.c -o dzr_static
    - name: publish
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        RELEASE_FILES: dzr dzr_static
      run: |
        RELEASE_TAG="$(date +%y%m%d)"
        curl -svL -XPOST -d '{"tag_name": "'$RELEASE_TAG'"}' \
          -H "Authorization: Bearer $GITHUB_TOKEN" \
          -H 'Content-Type: application/json' \
          "https://api.github.com/repos/${GITHUB_REPOSITORY}/releases"
        RELEASE_ID=$(curl -svL https://api.github.com/repos/${GITHUB_REPOSITORY}/releases/tags/$RELEASE_TAG | jq .id)
        for RELEASE_FILE in $RELEASE_FILES; do \
          [ -x $RELEASE_FILE ] && curl -svL -XPOST -T $RELEASE_FILE \
          -H "Authorization: token $GITHUB_TOKEN" \
          -H "Content-Type:application/octet-stream" \
          "https://uploads.github.com/repos/${GITHUB_REPOSITORY}/releases/$RELEASE_ID/assets?&name=$RELEASE_FILE-$OS" ; \
        done
